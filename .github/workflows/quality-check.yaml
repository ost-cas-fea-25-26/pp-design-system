name: "🛡️ Quality Check"

on:
  pull_request:
    types: [ opened, synchronize, reopened ]
  push:
    branches:
      - main
      - 'gh-readonly-queue/**'

jobs:
  lint:
    name: "✨ Lint"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: npm
      - run: npm ci --no-audit --no-fund
      - run: npm run lint

  test:
    name: "🧪 Unit Test + Coverage"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: npm
      - run: npm ci --no-audit --no-fund
      - run: npm run test:unit:coverage

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage
          if-no-files-found: error

  build_library:
    name: "🏗️ Build Test — Library"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: npm
      - run: npm ci --no-audit --no-fund
      - run: npm run build:lib

  build_storybook:
    name: "📘 Build Test — Storybook"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: npm
      - run: npm ci --no-audit --no-fund
      - run: npm run build:storybook

  e2e:
    name: "📸 E2E Test — ${{ matrix.browser }} — shard ${{ matrix.shard }}"
    runs-on: ubuntu-latest
    needs: build_storybook

    strategy:
      fail-fast: false
      matrix:
        browser: [ chromium, firefox, webkit ]
        shard: [ 1/3, 2/3, 3/3 ]

    container:
      image: mcr.microsoft.com/playwright:v1.56.1-jammy

    env:
      HOME: /root

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: npm ci --no-audit --no-fund

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright Tests (sharded)
        run: npx playwright test --project=${{ matrix.browser }} --shard=${{ matrix.shard }}

      - name: Upload Test Report (only if failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ matrix.browser }}-shard-${{ matrix.shard }}
          path: playwright-report/