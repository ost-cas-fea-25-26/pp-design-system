import{r as s,R as m}from"./iframe-bW3SthuQ.js";import{u as v}from"./index-DELc3mbO.js";function b(e,n,{checkForDefaultPrevented:t=!0}={}){return function(o){if(e?.(o),t===!1||!o.defaultPrevented)return n?.(o)}}var R=m[" useInsertionEffect ".trim().toString()]||v;function P({prop:e,defaultProp:n,onChange:t=()=>{},caller:l}){const[o,u,i]=E({defaultProp:n,onChange:t}),r=e!==void 0,a=r?e:o;{const c=s.useRef(e!==void 0);s.useEffect(()=>{const f=c.current;f!==r&&console.warn(`${l} is changing from ${f?"controlled":"uncontrolled"} to ${r?"controlled":"uncontrolled"}. Components should not switch from controlled to uncontrolled (or vice versa). Decide between using a controlled or uncontrolled value for the lifetime of the component.`),c.current=r},[r,l])}const d=s.useCallback(c=>{if(r){const f=h(c)?c(e):c;f!==e&&i.current?.(f)}else u(c)},[r,e,u,i]);return[a,d]}function E({defaultProp:e,onChange:n}){const[t,l]=s.useState(e),o=s.useRef(t),u=s.useRef(n);return R(()=>{u.current=n},[n]),s.useEffect(()=>{o.current!==t&&(u.current?.(t),o.current=t)},[t,o]),[t,l,u]}function h(e){return typeof e=="function"}export{b as c,P as u};
